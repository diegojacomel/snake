{
  "version": 3,
  "sources": [
    "../../node_modules/browser-pack/_prelude.js",
    "../../source/js/components/worms.js",
    "../../source/js/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "let canvas, ctx, WIDTH, HEIGHT, fps, el, stepSize, playing\nlet snake, playLabel, food\nlet globalTouch = [], offset = []\n\nwindow.addEventListener('touchstart', touchStart)\nwindow.addEventListener('touchmove', touchMove)\nwindow.addEventListener('touchend', touchEnd)\n\nwindow.addEventListener('keydown', keyDown)\nwindow.addEventListener('resize', resizeWindow)\n\nfunction touchEnd (e) {\n  if (Math.abs(offset[0]) > Math.abs(offset[1])) {\n    snake.direction = [offset[0] / Math.abs(offset[0]), 0]\n  } else if (Math.abs(offset[0]) < Math.abs(offset[1])) {\n    snake.direction = [0, offset[1] / Math.abs(offset[1])]\n  } else {\n    return\n  }\n}\n\nfunction touchMove (e) {\n  let touch = e.touches[0]\n\n  offset = [touch.pageX - globalTouch[0], touch.pageY - globalTouch[1]]\n}\n\nfunction touchStart (e) {\n  e.preventDefault()\n\n  const touch = e.touches[0]\n  globalTouch = [touch.pageX, touch.pageY]\n\n  if (!playing && globalTouch) {\n    playing = true\n  }\n}\n\nfunction keyDown (e) {\n  const keys = {\n    left: 37,\n    up: 38,\n    right: 39,\n    down: 40\n  }\n\n  if (!playing && (e.keyCode === keys.left || e.keyCode === keys.up || e.keyCode === keys.right || e.keyCode === keys.down)) {\n    playing = true\n  }\n\n  switch (e.keyCode) {\n    case keys.left:\n      if (snake.direction[0] === 1 && snake.direction[1] === 0) {\n        return\n      }\n      snake.direction = [-1, 0]\n      break;\n    case keys.up:\n      if (snake.direction[0] === 0 && snake.direction[1] === 1) {\n        return\n      }\n      snake.direction = [0, -1]\n      break;\n    case keys.right:\n      if (snake.direction[0] === -1 && snake.direction[1] === 0) {\n        return\n      }\n      snake.direction = [1, 0]\n      break;\n    case keys.down:\n      if (snake.direction[0] === 0 && snake.direction[1] === -1) {\n        return\n      }\n      snake.direction = [0, 1]\n      break;\n  }\n}\n\nfunction resizeWindow () {\n  WIDTH = window.innerWidth\n  HEIGHT = window.innerHeight\n\n  canvas.width = WIDTH\n  canvas.height = HEIGHT\n\n  stepSize = Math.max(Math.floor(WIDTH / 40), Math.floor(HEIGHT / 40))\n}\n\nfunction isMobileDevice () {\n  return /Android|iPhone|iPad|iPod|Windows Phone/i.test(navigator.userAgent)\n}\n\nfunction init () {\n  canvas = document.createElement('canvas')\n  resizeWindow()\n\n  document.querySelector('.js-canvas').appendChild(canvas)\n  ctx = canvas.getContext('2d')\n\n  ctx.fillStyle = '#cccccc'\n\n  fps = 5\n\n  newGame()\n  run()\n}\n\nfunction newGame () {\n  snake = new Snake()\n  playLabel = new PlayLabel()\n  food = new Food()\n\n  playing = false\n}\n\nfunction PlayLabel () {\n  this.text\n  this.color = '#666666'\n\n  this.messages = {\n    mobile: 'Arraste a tela para jogar',\n    pc: 'Pressione as setas para jogar'\n  }\n\n  if (isMobileDevice()) {\n    this.text = this.messages['mobile']\n  } else {\n    this.text = this.messages['pc']\n  }\n\n  this.draw = function () {\n    ctx.fillStyle = this.color\n    ctx.font = stepSize + 'px Arial'\n    ctx.fillText(this.text, WIDTH / 2 - ctx.measureText(this.text).width / 2, HEIGHT / 2)\n  }\n}\n\nfunction Food () {\n  this.score = 0\n  this.body = []\n  this.color = '#d30000'\n\n  this.body = [\n    Math.floor((Math.random() * canvas.width) / stepSize),\n    Math.floor((Math.random() * canvas.height) / stepSize)\n  ]\n\n  this.draw = function () {\n    ctx.fillStyle = this.color\n\n    ctx.fillRect(this.body[0] * stepSize, this.body[1] * stepSize, stepSize, stepSize)\n  }\n}\n\nfunction Snake () {\n  this.body = [\n    [10, 10],\n    [10, 11],\n    [10, 12]\n  ]\n  this.color = '#000000'\n  this.direction = [0, -1]\n\n  this.update = function () {\n    let nextPos = [this.body[0][0] + this.direction[0], this.body[0][1] + this.direction[1]]\n    let currentPos = [this.body[0][0], this.body[0][1]]\n\n    if (!playing) {\n      if (this.direction[1] === -1 && nextPos[1] <= (HEIGHT * 0.1 / stepSize)) {\n        this.direction = [1, 0] // RIGHT\n      } else if (this.direction[0] === 1 && nextPos[0] >= (WIDTH * 0.9 / stepSize)) {\n        this.direction = [0, 1] // DOWN\n      } else if (this.direction[1] === 1 && nextPos[1] >= (HEIGHT * 0.9 / stepSize)) {\n        this.direction = [-1, 0] // LEFT\n      } else if (this.direction[0] === -1 && nextPos[0] <= (WIDTH * 0.1 / stepSize)) {\n        this.direction = [0, -1] // UP\n      }\n    }\n\n    if (nextPos[0] === this.body[1][0] && nextPos[1] === this.body[1][1]) {\n      nextPos = [this.body[0][0] + this.direction[0], this.body[0][1] + this.direction[1]]\n    }\n\n    if (currentPos[0] == Math.floor(canvas.width / stepSize + 1) || currentPos[0] == -1 || currentPos[1] == Math.floor(canvas.height / stepSize + 1) || currentPos[1] == -1) {\n      food.score = 0\n      document.querySelector('.js-score').innerHTML = 'Pontuação: ' + food.score\n      return newGame()\n    }\n\n    if (food.body[0] === this.body[0][0] && food.body[1] === this.body[0][1]) {\n      this.body.push(currentPos)\n\n      food.score++\n      document.querySelector('.js-score').innerHTML = 'Pontuação: ' + food.score\n\n      food.body.splice(0, 1, Math.floor((Math.random() * canvas.width) / stepSize), Math.floor((Math.random() * canvas.width) / stepSize))\n    }\n\n    for (var i = 0; i < this.body.length; i++) {\n      if (nextPos[0] === this.body[i][0] && nextPos[1] === this.body[i][1]) {\n        return newGame()\n      }\n    }\n\n    this.body.pop()\n    this.body.splice(0, 0, nextPos)\n  }\n\n  this.draw = function () {\n    ctx.fillStyle = this.color\n\n    for (var i = 0; i < this.body.length; i++) {\n      ctx.fillRect(this.body[i][0] * stepSize, this.body[i][1] * stepSize, stepSize, stepSize)\n    }\n  }\n}\n\nfunction update () {\n  snake.update()\n}\n\nfunction run () {\n  update()\n  draw()\n\n  setTimeout(run, 1000 / fps)\n}\n\nfunction draw () {\n  ctx.clearRect(0, 0, WIDTH, HEIGHT)\n\n  snake.draw()\n  food.draw()\n\n  if (!playing) {\n    playLabel.draw()\n  }\n}\n\ninit()\n",
    "/**\n * Components.\n */\n\nimport './components/worms'\n"
  ]
}